<?php
/**
 * @file
 * Add SMS verification to telephone number field.
 */

define('DEFAULT_VERIFICATION_MESSAGE_TEMPLATE', 'Your SMS verification code is [phone_sms_verify:verify_code]. This code will be expired in [phone_sms_verify:expire_time] minutes.');

/**
 * Implements hook_field_widget_info().
 */
function telephone_sms_verify_field_widget_info() {
  return array(
    'telephone_sms_verify' => array(
      'label' => t('Telephone number with SMS verification'),
      'settings' => array(
        'placeholder' => '',
        'sms_template' => t(DEFAULT_VERIFICATION_MESSAGE_TEMPLATE),
        'sms_code_expire' => 30,
        'sms_code_length' => 6,
        'sms_code_count_down' => 30,
        'sms_code_max_request' => 3,
      ),
      'behaviors' => array(
        'multiple values' => FIELD_BEHAVIOR_DEFAULT,
        'default value' => FIELD_BEHAVIOR_NONE,
      ),
      'field types' => array('telephone'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function telephone_sms_verify_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $widget = $instance['widget'];
  $settings = $widget['settings'];

  $element += array(
    '#type' => module_exists('elements') ? 'telfield' : 'textfield',
    '#prefix' => '<div id="phone-number-' . $delta . '">',
    '#suffix' => '</div>',
    '#placeholder' => $settings['placeholder'],
    '#default_value' => isset($items[$delta]['value']) ? $items[$delta]['value'] : '',
  );

  $return['value'] = $element;

  // Do not show sms code verification elements on field settings page
  if (!empty($element['#entity'])) {
    $return['value']['#element_validate'][] = 'telephone_sms_verify_field_validate';
    $return['smscode'] = array(
      '#type' => 'textfield',
      '#size' => 6,
      '#title' => t('SMS Code'),
      '#prefix' => '<div class="sms-verification-code">',
      '#element_validate' => array('telephone_sms_verify_smscode_validate'),
    );
    $return['send_smscode'] = array(
      '#type' => 'button',
      '#ajax' => array(
        'wrapper' => 'phone-number-' . $delta,
        'callback' => 'telephone_sms_verify_ajax_callback',
      ),
      '#value' => t('Send SMS Code'),
      '#prefix' => '<div id="send-smscode"><div id="send-smscode-btn">',
      '#suffix' => '</div><div id="send-smscode-count-down"></div></div></div>',
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'telephone_sms_verify') . '/telephone_sms_verify.js',
          array(
            'data' => array('smscode_count_down' => $settings['sms_code_count_down']),
            'type' => 'setting'
          ),
        ),
      ),
      '#limit_validation_errors' => array(
        // Validate only the phone number field on AJAX call
        array($field['field_name'], LANGUAGE_NONE, $delta, 'value'),
      ),
      '#submit' => array(),
    );

    // SMS verification is not required on the account edit page
    if ($form['#user_category'] != 'account') {
      $return['smscode']['#required'] = TRUE;
    }
  }

  return $return;
}

/**
 * Implements hook_field_widget_error().
 */
function telephone_sms_verify_field_widget_error($element, $error, $form, &$form_state) {
  form_error($element, $error ['message']);
}

/**
 * Implements hook_field_widget_settings_form().
 */
function telephone_sms_verify_field_widget_settings_form($field, $instance) {
  $widget = $instance['widget'];
  $settings = $widget['settings'];

  $element['placeholder'] = array(
    '#type' => 'textfield',
    '#title' => t('Placeholder'),
    '#access' => module_exists('elements') || module_exists('placeholder'),
    '#description' => t('The placeholder is a short hint (a word or short phrase) intended to aid the user with data entry. A hint could be a sample value or a brief description of the expected format.'),
    '#default_value' => $settings['placeholder'],
  );

  $element['sms_template'] = array(
    '#type' => 'textarea',
    '#title' => t('SMS Template'),
    '#description' => t('The SMS template to send to the user.') . '<br />' . t('This field supports tokens.'),
    '#default_value' => $settings['sms_template'],
  );

  // Show available tokens
  $element['sms_template_tokens'] = array(
    '#theme' => 'token_tree',
    '#dialog' => TRUE,
    '#token_types' => array('phone_sms_verify'),
  );

  $element['sms_code_length'] = array(
    '#type' => 'textfield',
    '#size' => 6,
    '#title' => t('SMS Code Length'),
    '#maxlength' => 6,
    '#description' => t('The length of the SMS verification code'),
    '#default_value' => $settings['sms_code_length'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['sms_code_expire'] = array(
    '#type' => 'textfield',
    '#size' => 6,
    '#title' => t('SMS Code Expire'),
    '#maxlength' => 6,
    '#description' => t('The SMS verification time expiration time (in minutes).'),
    '#default_value' => $settings['sms_code_expire'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['sms_code_count_down'] = array(
    '#type' => 'textfield',
    '#size' => 6,
    '#title' => t('SMS Code Count Down'),
    '#maxlength' => 6,
    '#description' => t('The count down time (in seconds) until a new sms code can be sent.'),
    '#default_value' => $settings['sms_code_count_down'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['sms_code_max_request'] = array(
    '#type' => 'textfield',
    '#size' => 6,
    '#title' => t('SMS Code Max Request'),
    '#maxlength' => 6,
    '#description' => t('The maximum times that the SMS code can be requested in the expiration time.'),
    '#default_value' => $settings['sms_code_max_request'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  return $element;
}

function telephone_sms_verify_ajax_callback($form, $form_state) {
  $field = $form_state['triggering_element']['#array_parents'][0];
  $delta = $form_state['triggering_element']['#array_parents'][2];

  $phone_number = _telephone_sms_verify_format_default_value($form_state['values'][$field][LANGUAGE_NONE][$delta]['value']);
  $phone_number_default = _telephone_sms_verify_format_default_value($form[$field][LANGUAGE_NONE][$delta]['value']['#default_value']);

  // Do not send sms verification code on account editing page and the phone number is not changed
  if ($form['#user_category'] == 'account' && $phone_number == $phone_number_default) {
    return $form[$field][LANGUAGE_NONE][$delta]['value'];
  }

  $commands = array();

  if (empty($phone_number) || form_get_error($form[$field][LANGUAGE_NONE][$delta]['value']) // if there are errors on phone number element
  ) {
    // Clear all messages errors
    $commands[] = ajax_command_remove('#messages');
    // Show error messages before the AJAX wrapper element
    $commands[] = ajax_command_before(NULL, theme('status_messages'));
    // Update the AJAX wrapper element
    $commands[] = ajax_command_replace(NULL, drupal_render($form[$field][LANGUAGE_NONE][$delta]['value']));
    return array('#type' => 'ajax', '#commands' => $commands);
  }

  //Compute session key
  $form_id = $form_state['values']['form_id'];
  $session_key = md5($form_id . $phone_number);

  $expire = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_expire'];
  $length = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_length'];
  $max_request = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_max_request'];

  // Generate SMS verification code if not set or has expired
  if (!isset($_SESSION[$session_key]) || $_SESSION[$session_key]['time'] + 60 * $expire < time()) {
    $_SESSION[$session_key]['code'] = sprintf('%0' . $length . 'd', rand(0, (int) str_repeat('9', $length)));
    $_SESSION[$session_key]['time'] = time();
    $_SESSION[$session_key]['count'] = 0;
  }
  elseif ($_SESSION[$session_key]['count'] < $max_request) {
    $_SESSION[$session_key]['count'] += 1;
  }

  // Get SMS verification template from field widget settings
  $template = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_template'];

  // Set default value is no template is configured
  if (empty($template)) {
    $template = t(DEFAULT_VERIFICATION_MESSAGE_TEMPLATE);
  }

  $template = token_replace($template, array('phone_sms_verify' => array('verify_code' => $_SESSION[$session_key]['code'], 'expire_time' => $expire)));

  // Send SMS verification code using SMS Framework
  sms_send($phone_number, $template);

  // Clear all messages errors
  $commands[] = ajax_command_remove('#messages');
  // Update the AJAX wrapper element
  $commands[] = ajax_command_replace(NULL, drupal_render($form[$field][LANGUAGE_NONE][$delta]['value']));
  // Trigger javascript messages send countdown
  $commands[] = ajax_command_invoke(NULL, 'DrupalTelephoneSMSVerifyCountDown');

  return array('#type' => 'ajax', '#commands' => $commands);
}

function telephone_sms_verify_field_validate($element, &$form_state, $form) {
  $field = $element['#array_parents'][0];
  $delta = $element['#array_parents'][2];

  $expire = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_expire'];
  $phone_number = _telephone_sms_verify_format_default_value($form_state['values'][$field][LANGUAGE_NONE][$delta]['value']);

  //Compute session key
  $form_id = $form_state['values']['form_id'];
  $session_key = md5($form_id . $phone_number);

  $max_request = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_max_request'];

  if (isset($_SESSION[$session_key]) && $_SESSION[$session_key]['time'] + 60 * $expire >= time() && $_SESSION[$session_key]['count'] >= $max_request) {
    $minutes_left = ceil((($_SESSION[$session_key]['time'] + 60 * $expire) - time()) / 60);
    form_error($element, t('You have reached the maximum request limitation, please try again after @expire minutes', array('@expire' => $minutes_left)));
  }
}

function telephone_sms_verify_smscode_validate($element, &$form_state, $form) {
  $field = $element['#array_parents'][0];
  $delta = $element['#array_parents'][2];

  $phone_number = _telephone_sms_verify_format_default_value($form_state['values'][$field][LANGUAGE_NONE][$delta]['value']);
  $phone_number_default = _telephone_sms_verify_format_default_value($form[$field][LANGUAGE_NONE][$delta]['value']['#default_value']);

  // Only validates this field if the telephone number is newly added or changed
  if ($form['#user_category'] != 'account' || $phone_number != $phone_number_default) {
    if (empty($element['#value'])) {
      form_error($element, t('This field is required.'));
    }

    //Compute session key
    $form_id = $form_state['values']['form_id'];
    $session_key = md5($form_id . $phone_number);

    $expire = $form_state['field'][$field][LANGUAGE_NONE]['instance']['widget']['settings']['sms_code_expire'];

    if (!isset($_SESSION[$session_key]) || $element['#value'] != $_SESSION[$session_key]['code']) {
      form_error($element, t('Your SMS verification code is not right'));
    }
    elseif ($_SESSION[$session_key]['time'] + 60 * $expire < time()) {
      form_error($element, t('This SMS code has expired.'));
    }
  }
}

function _telephone_sms_verify_format_default_value($current, $default = '') {
  return isset($current) ? $current : $default;
}
